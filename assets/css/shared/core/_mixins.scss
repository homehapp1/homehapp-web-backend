@mixin vendors($property, $value) {
  -webkit-#{$property}: $value;
  -moz-#{$property}: $value;
  -ms-#{$property}: $value;
  -o-#{$property}: $value;
  #{$property}: $value;
}

@mixin noselect() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: -moz-none;
  -ms-user-select: none;
  user-select: none;
}

@mixin clearfix() {
  &:before, &:after {
    content: " ";
    display: block;
    clear: both;
    float: none;
    width: 0;
    height: 0;
  }
}

@mixin noOverflow($passthrough: true) {
  @if $passthrough == true {
    @media only screen and (max-width: $largeWidth) {
      @content;
    }
  }
  @else {
    @media only screen and (min-width: $mediumWidth) and (max-width: $pageWidth) {
      @content;
    }
  }
}

@mixin large() {
  @media only screen and (min-width: $mediumWidth) {
    @content;
  }
}

@mixin medium($small: true) {
  @if $small == true {
    @media only screen and (max-width: $mediumWidth) {
      @content;
    }
  }
  @else {
    @media only screen and (min-width: $smallWidth) and (max-width: $mediumWidth) {
      @content;
    }
  }
}

@mixin small() {
  @media only screen and (max-width: $smallWidth) {
    @content;
  }
}

@mixin notSmall() {
  @media only screen and (min-width: $smallWidth) {
    @content;
  }
}

@mixin animate($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin ball() {
  $s: 40px;
  display: block;
  width: $s;
  height: $s;
  line-height: $s;
  margin-top: -0.5 * $s;
  border-radius: $s;
  text-align: center;
  color: black;
  cursor: pointer;
  font-size: 150%;
  background-color: #ffffff;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.4);
  opacity: 0.2;
  font-size: 0.8 * $s;
  @include vendors(transition-property, all);
  @include vendors(transition-duration, $transitionDurationFast);

  @include small() {
    @include vendors(transition-property, none);
  }

  &:hover {
    opacity: 0.8;

    @include small() {
      opacity: 0.2;
    }
  }
}

@mixin imageFill() {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  z-index: 0;
  background-color: $extraLightGray;

  & > img, & > video {
    position: absolute;
    min-width: 100%;
    min-height: 100%;
    left: 50%;
    top: 50%;
    @include vendors(transform, translateX(-50%) translateY(-50%));
  }

  &[data-valign="top"] {
    & > img, & > video {
      top: 0;
      @include vendors(transform, translateX(-50%));
    }
  }

  &[data-valign="middle"] {
    & > img, & > video {
      top: 50%;
      @include vendors(transform, translateX(-50%) translateY(-50%));
    }
  }

  &[data-valign="bottom"] {
    & > img, & > video {
      top: auto;
      bottom: 0;
    }
  }

  @content;
}

@mixin hexagon($color) {
  background-image: url("data:image/svg+xml;utf8,<?xml version='1.0' encoding='UTF-8'?><svg width='73px' height='79px' viewBox='0 0 73 79' version='1.1' xmlns='http://www.w3.org/2000/svg'><polygon points='35.7 -1.3 71.3 19.2 71.3 60.3 35.7 80.8 0.1 60.3 0.1 19.2' fill='#{$color}'></polygon></svg>");
  background-position: center center;
  background-size: contain;
}
