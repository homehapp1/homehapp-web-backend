@mixin vendors($property, $value) {
  -webkit-#{$property}: $value;
  -moz-#{$property}: $value;
  -ms-#{$property}: $value;
  -o-#{$property}: $value;
  #{$property}: $value;
}

@mixin noselect() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: -moz-none;
  -ms-user-select: none;
  user-select: none;
}

@mixin clearfix() {
  &:before, &:after {
    content: " ";
    display: block;
    clear: both;
    float: none;
    width: 0;
    height: 0;
  }
}

@mixin noOverflow($passthrough: true) {
  @if $passthrough == true {
    @media only screen and (max-width: $largeWidth) {
      @content;
    }
  }
  @else {
    @media only screen and (min-width: $mediumWidth) and (max-width: $pageWidth) {
      @content;
    }
  }
}

@mixin large() {
  @media only screen and (min-width: $mediumWidth) {
    @content;
  }
}

@mixin medium($small: true) {
  @if $small == true {
    @media only screen and (max-width: $mediumWidth) {
      @content;
    }
  }
  @else {
    @media only screen and (min-width: $smallWidth) and (max-width: $mediumWidth) {
      @content;
    }
  }
}

@mixin small() {
  @media only screen and (max-width: $smallWidth) {
    @content;
  }
}

@mixin verySmall() {
  @media only screen and (max-width: $smallWidth / 2) {
    @content;
  }
}

@mixin notSmall() {
  @media only screen and (min-width: $smallWidth) {
    @content;
  }
}

@mixin animate($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin ball() {
  $s: 40px;
  display: block;
  width: $s;
  height: $s;
  line-height: $s;
  margin-top: -0.5 * $s;
  border-radius: $s;
  text-align: center;
  color: black;
  cursor: pointer;
  font-size: 150%;
  background-color: #ffffff;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.4);
  opacity: 0.4;
  font-size: 0.8 * $s;
  @include vendors(transition-property, all);
  @include vendors(transition-duration, $transitionDurationFast);

  @include small() {
    @include vendors(transition-property, none);
  }

  &:hover {
    opacity: 1;

    @include small() {
      opacity: 0.4;
    }
  }
}

@mixin imageContent() {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  z-index: 0;
  background-color: $extraLightGray;
}

@mixin imageFill() {
  @include imageContent();

  & > img, & > video {
    position: absolute;
    min-width: 100%;
    min-height: 100%;
    left: 50%;
    top: 50%;
    @include vendors(transform, translateX(-50%) translateY(-50%));
  }

  &[data-valign="top"] {
    & > img, & > video {
      top: 0;
      @include vendors(transform, translateX(-50%));
    }
  }

  img[data-valign="top"], video[data-valign="top"] {
    top: 0;
    @include vendors(transform, translateX(-50%));
  }

  &[data-valign="middle"] {
    & > img, & > video {
      top: 50%;
      @include vendors(transform, translateX(-50%) translateY(-50%));
    }
  }

  &[data-valign="bottom"] {
    & > img, & > video {
      top: auto;
      bottom: 0;
    }
  }

  img[data-valign="bottom"], video[data-valign="bottom"] {
    top: auto;
    bottom: 0;
    @include vendors(transform, translateX(-50%));
  }

  @content;
}

@mixin hexagon($color) {
  background-image: url("data:image/svg+xml;utf8,<?xml version='1.0'?><svg width='100%' height='100%' viewBox='0 0 70 70' version='1.1' xmlns='http://www.w3.org/2000/svg'><g transform='matrix(0.437564,0,0,0.437564,4.78837,-0.161124)'><path d='M62.186,2.069C65.974,-0.196 72.117,-0.195 75.904,2.069L131.089,35.062C134.877,37.327 137.947,42.742 137.947,47.156L137.947,113.557C137.947,117.972 134.875,123.387 131.089,125.651L75.904,158.644C72.116,160.909 65.973,160.908 62.186,158.644L7.001,125.651C3.213,123.386 0.143,117.971 0.143,113.557L0.143,47.156C0.143,42.741 3.215,37.326 7.001,35.062L62.186,2.069Z' style='fill:#{$color};'/></g></svg>");
  background-position: center center;
  background-size: contain;
}
