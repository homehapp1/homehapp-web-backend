.property-list {
  $w: 400px;
  padding: $contentPadding * 10 $contentPadding / 2;
  margin-left: auto;
  margin-right: auto;
  text-align: center;

  h2 {
    margin-bottom: $contentPadding * 10;
    font-size: 200%;
  }

  .list-container {
    width: $w + 2 * $contentPadding;
    display: inline-block;
    vertical-align: top;
  }

  .mode-selector {
    margin: 0 0 4 * $contentPadding;
    padding: 0;
    list-style: none;
    font-size: 200%;

    li {
      display: inline;

      & + li {
        margin-left: 1em;
      }

      a {
        color: black;
      }
    }
  }

  .address {
    span + span {
      &:before {
        content: ' // ';
        margin-left: 0.5em;
        margin-right: 0.5em;
      }
    }
  }

  .property-preview {
    position: relative;

    & > .container {
      overflow: hidden;
      $w: 3 * $contentPadding;
      border-top: solid $w white;
      border-bottom: solid $w white;

      .property-list-item {
        .content {
          position: absolute;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          overflow: hidden;

          img {
            min-width: 100%;
            min-height: 100%;
            position: absolute;
            left: 50%;
            top: 50%;
            @include vendors(transform, translateX(-50%) translateY(-50%));
            @include vendors(transition-timing-function, linear);
            @include vendors(transition-property, all);
          }

          .details {
            position: absolute;
            bottom: $contentPadding * 2 + $w;
            left: $contentPadding * 2;
            right: $contentPadding * 2;
            font-size: 200%;
            color: white;
            text-align: left;

            .address {
              background-color: rgba(0, 0, 0, 0.4);
              display: inline-block;
              padding: $contentPadding;
            }
          }
        }

        &.active .content img {
          // @include vendors(animation-name, pulse);
          // @include vendors(animation-duration, 30000ms);
          // @include vendors(animation-iteration-count, infinite);
          // @include vendors(animation-direction, alternate);
        }
      }
    }
  }

  .cards {
    position: relative;

    .card {
      width: $w + $contentPadding * 2;
      display: block;
      text-align: left;
      padding: 0 $contentPadding $contentPadding * 2;
      position: absolute;
      left: 50%;
      top: 0;

      @include small() {
        position: static;
      }

      .card-content {
        background-color: white;
        box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.8);

        & > .thumbnail {
          display: block;
        }

        .details {
          padding: $contentPadding;

          p {
            margin-bottom: 0;

            &:first-child {
              margin-top: 0;
            }
          }

          p + p {
            margin-top: 0;
          }
        }
      }
    }

    .card-list.animate .card {
      @include vendors(transition-property, all);
      @include vendors(transition-duration, 500ms);
    }

    .card-list.single .card {
      position: static;
      margin-left: auto;
      margin-right: auto;
    }
  }
}

@include animate(pulse) {
  0% {
    @include vendors(transform, translateX(-50%) translateY(-50%) scale(1));
  }

  100% {
    @include vendors(transform, translateX(-50%) translateY(-50%) scale(1.1));
  }
}
