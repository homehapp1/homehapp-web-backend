.property-list {
  $paddingTop: 2 * $contentPadding;
  padding: $paddingTop $contentPadding / 2;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  background-color: $extraLightGray;
  background-image: url('../images/stripe.png');
  background-repeat: repeat;

  &.partial-list {
    $maxHeight: 1200px;
    $paddingBottom: 100px;
    $maskHeight: 200px;
    $q: 0.7;
    $d: top;
    $g1: rgba(241, 241, 241, 0);
    $g2: rgba(241, 241, 241, 1);
    padding-top: $paddingTop;
    padding-bottom: $paddingBottom;
    min-height: 0 !important;
    height: $maxHeight;
    overflow: hidden;
    background-image: none;
    position: relative;
    background-color: $g2;

    &:before {
      display: block;
      content: ' ';
      position: absolute;
      z-index: 1;
      left: 0;
      right: 0;
      height: $maskHeight * $q;
      bottom: $maskHeight * (1 - $q) + $paddingBottom;
      background-image: -webkit-linear-gradient($d, $g1, $g2);
      background-image: -moz-linear-gradient($d, $g1, $g2);
      background-image: -ms-linear-gradient($d, $g1, $g2);
      background-image: -o-linear-gradient($d, $g1, $g2);
      background-image: linear-gradient($d, $g1, $g2);
    }

    &:after {
      display: block;
      content: ' ';
      position: absolute;
      z-index: 1;
      bottom: 0;
      left: 0;
      right: 0;
      height: $maskHeight * (1 - $q) + $paddingBottom;
      background-color: $g2;
    }

    .read-more {
      $width: 300px;
      display: block;
      width: $width;
      position: absolute;
      z-index: 2;
      left: 50%;
      bottom: $contentPadding * 2 + $paddingBottom;
      margin-left: -0.5 * $width;
    }
  }

  h2 {
    margin-bottom: $contentPadding * 10;
    font-size: 200%;
  }

  .list-container {
    width: $cardWidth + 2 * $contentPadding;
    display: inline-block;
    vertical-align: top;
  }

  .mode-selector {
    margin: 0 0 4 * $contentPadding;
    padding: 0;
    list-style: none;
    font-size: 200%;

    li {
      display: inline;

      & + li {
        margin-left: 1em;
      }

      a {
        color: $fontLightGray;
      }

      &.active a, &:hover a {
        color: black;
      }
    }
  }

  .address {
    span + span {
      &:before {
        content: ' // ';
        margin-left: 0.5em;
        margin-right: 0.5em;
      }
    }
  }

  .property-list {
    text-align: left;
    $sThumb: 300px;
    $sPrice: 60px;
    display: block;

    & > .property-list-item {
      display: block;
      height: $sThumb;
      background-color: white;
      box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.8);
      position: relative;
      overflow: hidden;

      & + .property-list-item {
        margin-top: $contentPadding;
      }

      & > .thumbnail {
        width: $sThumb;
        height: $sThumb;
        float: left;
        margin-right: $contentPadding * 3;
      }

      & > .details {
        padding: $contentPadding 0;
        float: left;
        height: $sThumb;

        .label {
          font-weight: 500;
        }

        @include small() {
          height: auto;
        }

        p {
          margin: 0;
        }

        .thumbnails {
          margin: 0;
          padding: 0;
          position: absolute;
          bottom: $contentPadding;
          left: $sThumb + $contentPadding * 3;
          right: $contentPadding;
          list-style: none;
          display: table;

          li {
            display: table-cell;
            padding: 2px;

            img {
              display: block;
              float: left;
            }
          }
        }

        .address {
          line-height: $sPrice;
          margin: 0;
          font-weight: 500;

          span + span {
            &:before {
              content: ' // ';
            }
          }
        }

        p.price {
          position: absolute;
          top: $contentPadding;
          right: $contentPadding;
          width: $sPrice;
          height: $sPrice;
          line-height: $sPrice;
          text-align: center;
          color: white;
          background-color: $orange;
          font-weight: 500;
          margin: 0;
          border-radius: $sPrice;
        }

        .amenities {
          margin: 1em 0;

          span.label {
            font-weight: 500;
            display: inline;
          }

          ul {
            display: inline;
            margin: 0;
            padding: 0;
            list-style: none;

            & + span:before {
              display: block;
              content: ' ';
            }

            li {
              display: inline;
              //white-space: nowrap;

              &:after {
                content: ' / ';
              }

              &:last-child:after {
                content: '';
              }
            }
          }
        }
      }
    }
  }

  .property-preview {
    position: relative;

    & > .container {
      overflow: hidden;
      $outline: 3 * $contentPadding;
      border-top: solid $outline white;
      border-bottom: solid $outline white;

      .property-list-item {
        .content {
          position: absolute;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          overflow: hidden;

          img {
            min-width: 100%;
            min-height: 100%;
            position: absolute;
            left: 50%;
            top: 50%;
            @include vendors(transform, translateX(-50%) translateY(-50%));
            @include vendors(transition-timing-function, linear);
            @include vendors(transition-property, all);
          }

          .details {
            position: absolute;
            bottom: $contentPadding * 4;
            left: $contentPadding * 2;
            right: $contentPadding * 2;
            font-size: 200%;
            color: white;
            text-align: left;

            .address {
              background-color: rgba(0, 0, 0, 0.4);
              display: inline-block;
              padding: $contentPadding;
            }
          }
        }

        &.active .content img {
          // @include vendors(animation-name, pulse);
          // @include vendors(animation-duration, 30000ms);
          // @include vendors(animation-iteration-count, infinite);
          // @include vendors(animation-direction, alternate);
        }
      }
    }
  }

  .card-list {
    position: relative;
    width: 100%;
    //max-width: $cardColumns * $cardWidth;
    margin-left: auto;
    margin-right: auto;

    .card {
      width: $cardWidth;
      display: block;
      text-align: left;
      padding: 0 $contentPadding $contentPadding * 2;
      position: absolute;
      left: 50%;
      top: 0;

      &.storified {
        &:before {
          $w: 60px;
          position: absolute;
          content: 'Story';
          display: block;
          top: $contentPadding;
          right: $contentPadding;
          background-image: url('../images/hexagon-white.svg');
          background-size: contain;
          background-position: center center;
          width: $w;
          height: (99 / 115) * $w;
          line-height: (99 / 115) * $w;
          text-align: center;
          z-index: 1;
          font-family: "Roboto Slab", monospace, serif;
          font-weight: 500;
          font-size: 90%;
        }
      }

      @include small() {
        position: static;
      }

      .card-content {
        background-color: white;
        box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.8);

        & > .thumbnail {
          display: block;
        }

        .details {
          padding: $contentPadding;

          p {
            margin-bottom: 0;

            &:first-child {
              margin-top: 0;
            }
          }

          p + p {
            margin-top: 0;
          }
        }
      }
    }

    &.animate .card {
      @include vendors(transition-property, all);
      @include vendors(transition-duration, $transitionDuration);
    }

    &.single .card {
      position: static;
      margin-left: auto;
      margin-right: auto;
    }
  }
}

@include animate(pulse) {
  0% {
    @include vendors(transform, translateX(-50%) translateY(-50%) scale(1));
  }

  100% {
    @include vendors(transform, translateX(-50%) translateY(-50%) scale(1.1));
  }
}
