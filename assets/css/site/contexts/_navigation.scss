#navigation {
  display: block;
  float: right;
  line-height: $headerHeight - 2 * $pv;
  text-shadow: 0 0 4px rgba(255, 255, 255, 0.2);
  $iconSize: 20px;
  $spacing: 5px;
  $h: $iconSize / 3 - $spacing;
  $oSquared: $h / 1.44;
  $oThirds: 0.5 * $h;

  .icon {
    display: block;
    width: $iconSize;
    height: $iconSize;
    position: fixed;
    top: ($headerHeight - $iconSize) / 2;
    right: ($headerHeight - $iconSize) / 2;
    z-index: 100;
    border-radius: $iconSize;

    &:before {
      $p: 14px;
      content: ' ';
      display: block;
      position: absolute;
      z-index: -1;
      width: $iconSize + $p;
      height: $iconSize + $p;
      margin-top: -0.5 * $p;
      margin-left: -0.5 * $p;
      background-color: white;
      border-radius: $iconSize + $p;
    }

    @include vendors(transition-timing-function, linear);
    @include vendors(transition-property, all);
    @include vendors(transition-duration, 1000ms);

    & > * {
      display: block;
      position: absolute;
      width: $iconSize;
      height: $h;
      background-color: black;
      border-radius: 2px;
      @include vendors(transition-property, all);
      @include vendors(transition-duration, 500ms);
      @include vendors(transition-timing-function, ease-out);

      &.top {
        top: 0;
        @include vendors(transform-origin, 50% 0 0);
        @include vendors(transform, translateY(4px));
      }

      &.middle {
        top: 50%;
        margin-top: -0.5 * $h;
      }

      &.bottom {
        top: 100%;
        margin-top: -1 * $h;
        @include vendors(transform-origin, 50% 100% 0);
        @include vendors(transform, translateY(-4px));
      }
    }

    &.open {
      & > * {
        background-color: $red;
        box-shadow: none;

        &.middle {
          opacity: 0;
        }

        &.top {
          $m: 0.5 * ($iconSize - $oSquared);
          $t: translateY($m) rotate(45deg);
          @include vendors(transform, $t);
        }

        &.bottom {
          $m: -0.5 * ($iconSize - $oSquared);
          $t: translateY($m) rotate(-45deg);
          @include vendors(transform, $t);
        }
      }
    }

    &.loading {
      @include vendors(animation-name, rotate);
      @include vendors(animation-iteration-count, infinite);
      @include vendors(animation-duration, 1000ms);
      @include vendors(animation-direction, initial);
      @include vendors(animation-timing-function, linear);

      & > * {
        background-color: $orange;
        box-shadow: none;
        $x: 0.866 * $oThirds;
        &.top {
          $m: 0.5 * ($iconSize - $oThirds);
          $t: translateX($x) translateY($m) rotate(60deg);
          @include vendors(transform, $t);
        }

        &.bottom {
          $m: -0.5 * ($iconSize - $oThirds);
          $t: translateX($x) translateY($m) rotate(-60deg);
          @include vendors(transform, $t);
        }
      }
    }
  }

  & > .container {
    position: absolute;
    background-color: white;
    top: $contentPadding;
    right: $contentPadding;
    z-index: 99;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    //padding-top: $iconSize + $contentPadding;
    width: 0;
    overflow: hidden;
    @include vendors(transition-property, width);
    @include vendors(transition-duration, 500ms);

    @include small() {
      left: 0;
      right: 0;
      top: 0;
      width: 100%;
    }

    ul {
      margin: 0;
      padding: $contentPadding * 2;
      list-style: none;

      li {
        display: block;
        white-space: nowrap;

        a {
          display: block;
          padding: $contentPadding / 2 0;
          color: black;
          font-style: italic;

          &:hover, &.active {
            color: $turquoise;
          }
        }
      }
    }
  }

  .icon.open + .container {
    display: block;
    width: 200px;
  }
}

@include animate(rotate) {
  0% {
    @include vendors(transform, rotate(0));
  }

  100% {
    @include vendors(transform, rotate(360deg));
  }
}
